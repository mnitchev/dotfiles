local present, alpha = pcall(require, "alpha")

if not present then
   return
end

local colors = require("base46").get_colors("base_30")

vim.cmd[[highlight GiantSwarmOrange guifg=#ff6348]]
vim.cmd[[highlight ButtonGreen guifg=#89b482]]
vim.cmd[[highlight ButtonYellow guifg=#d6b676]]

local function button(sc, txt, keybind)
   local sc_ = sc:gsub("%s", ""):gsub("SPC", "<leader>")
   sc_ = sc:gsub("%s", ""):gsub("CTRL (.*)", "<C-%1>")

   local opts = {
      position = "center",
      text = txt,
      shortcut = sc,
      cursor = 5,
      width = 36,
      align_shortcut = "right",
      hl = "ButtonGreen",
      hl_shortcut = "ButtonYellow"
   }

   if keybind then
      opts.keymap = { "n", sc_, keybind, { noremap = true, silent = true } }
   end

   return {
      type = "button",
      val = txt,
      on_press = function()
         local key = vim.api.nvim_replace_termcodes(sc_, true, false, true)
         vim.api.nvim_feedkeys(key, "normal", false)
      end,
      opts = opts,
   }
end

local function footer()
  local datetime = os.date "Ôëï %A %B %d %Y"
  return datetime
end

local options = {}

local ascii = {
"                                   ",
"                                   ",
"                                   ",
"   ‚£¥‚£∂‚£§‚°§‚†¶‚£§‚£Ä‚£§‚†Ü     ‚£à‚£≠‚£ø‚£∂‚£ø‚£¶‚£º‚£Ü          ",
"    ‚†â‚†ª‚¢ø‚£ø‚†ø‚£ø‚£ø‚£∂‚£¶‚†§‚†Ñ‚°†‚¢æ‚£ø‚£ø‚°ø‚†ã‚†â‚†â‚†ª‚£ø‚£ø‚°õ‚£¶       ",
"          ‚†à‚¢ø‚£ø‚£ü‚†¶ ‚£æ‚£ø‚£ø‚£∑    ‚†ª‚†ø‚¢ø‚£ø‚£ß‚£Ñ     ",
"           ‚£∏‚£ø‚£ø‚¢ß ‚¢ª‚†ª‚£ø‚£ø‚£∑‚£Ñ‚£Ä‚†Ñ‚†¢‚£Ä‚°Ä‚†à‚†ô‚†ø‚†Ñ    ",
"          ‚¢†‚£ø‚£ø‚£ø‚†à    ‚£ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£õ‚£≥‚£§‚£Ä‚£Ä   ",
"   ‚¢†‚£ß‚£∂‚£•‚°§‚¢Ñ ‚£∏‚£ø‚£ø‚†ò  ‚¢Ä‚£¥‚£ø‚£ø‚°ø‚†õ‚£ø‚£ø‚£ß‚†à‚¢ø‚†ø‚†ü‚†õ‚†ª‚†ø‚†Ñ  ",
"  ‚£∞‚£ø‚£ø‚†õ‚†ª‚£ø‚£ø‚°¶‚¢π‚£ø‚£∑   ‚¢ä‚£ø‚£ø‚°è  ‚¢∏‚£ø‚£ø‚°á ‚¢Ä‚£†‚£Ñ‚£æ‚†Ñ   ",
" ‚£†‚£ø‚†ø‚†õ ‚¢Ä‚£ø‚£ø‚£∑‚†ò‚¢ø‚£ø‚£¶‚°Ä ‚¢∏‚¢ø‚£ø‚£ø‚£Ñ ‚£∏‚£ø‚£ø‚°á‚£™‚£ø‚°ø‚†ø‚£ø‚£∑‚°Ñ  ",
" ‚†ô‚†É   ‚£º‚£ø‚°ü  ‚†à‚†ª‚£ø‚£ø‚£¶‚£å‚°á‚†ª‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø ‚£ø‚£ø‚°á ‚†õ‚†ª‚¢∑‚£Ñ ",
"      ‚¢ª‚£ø‚£ø‚£Ñ   ‚†à‚†ª‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü ‚†´‚¢ø‚£ø‚°Ü     ",
"       ‚†ª‚£ø‚£ø‚£ø‚£ø‚£∂‚£∂‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚¢Ä‚£Ä‚£§‚£æ‚°ø‚†É     ",
"                                   ",
}

options.header = {
   type = "text",
   val = ascii,
   opts = {
      position = "center",
      hl = "GiantSwarmOrange",
   },
}

options.buttons = {
   type = "group",
   val = {
      button("e", "ÔÖõ  New file", "<cmd>ene <CR>"),
      button("CTRL p", "ÔÄÇ  Find File  ", ":Telescope find_files find_command=rg,--ignore,--hidden,--files prompt_prefix=üîç<cr>"),
      button("SPC f h", "ÔÖõ  Recent File  ", ":Telescope oldfiles<CR>"),
      button("SPC f s", "ÔÄÇ  Search Word  ", ":Telescope live_grep<CR>"),
      button("SPC f b", "ÔÄÆ  Bookmarks  ", ":Telescope marks<CR>"),
      button("SPC v e", "Óòï  Settings", ":e $MYVIMRC | :cd %:p:h <CR>"),
      button( "q", "Û∞©à  > Quit NVIM", ":qa<CR>"),
   },
   opts = {
      spacing = 1,
   },
}

options.footer = {
    type = "text",
    val = footer(),
    opts = {
       position = "center",
    },
}

options.fortune = {
  type = "text",
  val = require "alpha.fortune"(),
  opts = {
    position = "center",
    hl = "AlphaQuote",
  },
}

options = require("core.utils").load_override(options, "goolord/alpha-nvim")

alpha.setup {
   layout = {
      { type = "padding", val = 2 },
      options.header,
      { type = "padding", val = 2 },
      options.buttons,
      { type = "padding", val = 1 },
      options.footer,
      { type = "padding", val = 1 },
      options.fortune,
   },
   opts = {},
}
